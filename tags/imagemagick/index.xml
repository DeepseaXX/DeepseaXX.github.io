<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ImageMagick on DeepseaXX's Blog</title><link>https://deepseaxx.com/tags/imagemagick/</link><description>Recent content in ImageMagick on DeepseaXX's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 08 Feb 2024 14:19:00 +0900</lastBuildDate><atom:link href="https://deepseaxx.com/tags/imagemagick/index.xml" rel="self" type="application/rss+xml"/><item><title>关于使用 ImageMagick 转换 pdf tif/tiff 至 png</title><link>https://deepseaxx.com/p/20240208-imagemagick/</link><pubDate>Thu, 08 Feb 2024 14:19:00 +0900</pubDate><guid>https://deepseaxx.com/p/20240208-imagemagick/</guid><description>&lt;p>反正就是因为某个特殊原因，获得的文件都是用 pdf 或 tiff 格式，且大部分为矢量图。&lt;/p>
&lt;h2 id="为什么有这样的需求">为什么有这样的需求
&lt;/h2>&lt;p>我的需求也有很多情景，不同的需求。&lt;/p>
&lt;ul>
&lt;li>含有多页的 PDF/TIF 可以拆分成单个图片。
&lt;ul>
&lt;li>CubePDF Utility 可以实现这样的需求，但是了解后发现只能通过 UI 操作，没有很好的 CLI 支持，不适用大量转换，每次都要多次操作。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对于不支持 tif 和 pdf 贴图（指直接复制粘贴）的 Excel，可以把整张图片直接粘贴入，并在上面添加文本框和标注。
&lt;ul>
&lt;li>PDF 原生支持标记，借助免费的 Sumatra 或者收费的 Acrobat 可以实现，但是考虑到其他协作人也要共同编辑，收费软件产生的花销原因排除，免费软件 Sumatra 平均操作两次就要无响应一次也可以排除。Excel 本身已经是很多公司付费软件的标配，大多数人也都熟悉基本操作，容易上手。&lt;/li>
&lt;li>图片上直接编辑只适用于临时使用的情况，情况有变之后需要编辑就很复杂。&lt;/li>
&lt;li>Microsoft Whiteboard 可能适合我的想法，但是暂时还没成为被微软重视的项目，总感觉会在一个半成品的停留至死，在这种兼容性很差的平台投入工作总感觉非常危险。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>从矢量图转换为位图，转换出来的文件要尽可能小。
&lt;ul>
&lt;li>首先源文件为矢量图只是因为特殊需求，且在这个特定需求下矢量图的尺寸相当之小。其实输出是不是矢量图没啥关系，我也希望输出是不怎么占用空间的矢量图格式。但矢量图本身也有各种种类。另外就是，&lt;a class="link" href="https://www.imagemagick.org/Usage/formats/#vector" target="_blank" rel="noopener"
>magick 处理矢量图本身就不被推荐&lt;/a>，推荐使用专门为了矢量图设计的工具。上文中也有其他推荐，暂时还没有了解。&lt;/li>
&lt;li>相比原图的风格，例如是否是有大片空白面积，是否黑白，是更多硬线条还是色彩丰富的风景画，jpg 和 png 的压缩方式分别适用于不同的场景，文件尺寸也有不同的表现。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="命令">命令
&lt;/h2>&lt;h3 id="tif-to-png">tif to png
&lt;/h3>&lt;p>先上我最常用的，tif 格式转换为 png 格式的指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">convert -density 144 -quality 100 -depth 8 -alpha remove -resize 50% input.tif out.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这是把 tif 转换为 png 的一个最常用的参数。&lt;/p>
&lt;ul>
&lt;li>&lt;code>-density 144&lt;/code>代表解像度。&lt;/li>
&lt;li>&lt;code>-quality 100&lt;/code>代表压缩质量，因为这种单色图片比起压缩质量，更重要的是分辨率上的尺寸压缩，quality 本身对输出的影响很小。&lt;/li>
&lt;li>&lt;code>-depth 8&lt;/code>就是我们说的 8bit 色深。&lt;/li>
&lt;li>&lt;code>-alpha remove&lt;/code>指删除所有透明层，我常用到的 tiff 格式的矢量图片是透明背景，不删除透明层直接压缩成位图会变得很奇怪。&lt;/li>
&lt;li>&lt;code>-resize 50%&lt;/code>尺寸缩放为原尺寸的 50%，因为原图一般为五位数乘四位数像素的大小，在不追求严格的场景下完全没必要，所以 50%甚至 30%都是可以的。&lt;/li>
&lt;/ul>
&lt;p>另外不知道 magick 内部是如何处理这些输入参数的，如果调换顺序，很有可能导致参数不起效果。我写的顺序姑且是保证所有参数都可以生效的。&lt;/p>
&lt;h3 id="pdf-to-png">pdf to png
&lt;/h3>&lt;p>然后是 pdf 格式转换为 png 格式。&lt;/p>
&lt;p>pdf 格式的输入就有很多种类型了，可能是 word 或 excel 文档的导出结果，有可能是海报图片等，也有可能是跟上述 tif 相同的黑白矢量图。所以一种设置无法覆盖所有情况，根据自己需求调整。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> convert -density 300 -quality 100 -depth 8 -alpha remove -resize 30% input.pdf out.png)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>-density 300&lt;/code>代表解像度。相比 tif 格式的输入，pdf 内含的“图片尺寸”更小，所以用更高的解像度来保证转换足够保真。&lt;/li>
&lt;li>&lt;code>-quality 100&lt;/code>同上&lt;/li>
&lt;li>&lt;code>-depth 8&lt;/code>同上&lt;/li>
&lt;li>&lt;code>-alpha remove&lt;/code>同上&lt;/li>
&lt;li>&lt;code>-resize 30%&lt;/code>尺寸缩放为原尺寸的 30%，或自己修改为 50%，或者完全不进行 resize（删掉这一部分），像前文说的，pdf 的输入有各种各样的情况，尺寸也各有区别。&lt;/li>
&lt;/ul>
&lt;p>针对 pdf 的各种情景，推荐按照自己最常用的场景分别保存为不同的 bat 文件来一键执行。下一段放一下我自己（指导 ChatGPT）写的易用的批处理文件。&lt;/p>
&lt;h2 id="批处理">批处理
&lt;/h2>&lt;p>用刚才 pdf to png 的例子来说，在我的电脑里有这样一个结构的 convert（任意名）文件夹，内部保存了 pdf2png.bat（任意名）的批处理文件，该阶层下有 src 和 out 两个文件夹，（与 bat 内的 INPUT_DIR 和 OUTPUT_DIR 保持一致），src 存放输入文件，out 为输出位置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">convert/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ pdf2png.bat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├─src/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ example.pdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└─out/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> example.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后这是 pdf2png.bat 的内容。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">set INPUT_DIR=src
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set OUTPUT_DIR=out
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set INPUT_FORMAT=pdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set OUTPUT_FORMAT=png
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">for /r &amp;#34;%INPUT_DIR%&amp;#34; %%i in (*.%INPUT_FORMAT%) do (
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> convert -density 300 -quality 100 -depth 8 -alpha remove -resize 30%% &amp;#34;%%i&amp;#34; &amp;#34;%OUTPUT_DIR%\%%~ni.%OUTPUT_FORMAT%&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>首先我没有使用&lt;code>@echo off&lt;/code>，是因为部分情况下处理过程较慢，我希望试试看见现在的进度在哪，并知道他不是卡住了。&lt;/p>
&lt;p>开头的四行&lt;code>set 变量名=目录名&lt;/code>，谜底就在谜面上，分别对应了输入文件夹，输出文件夹，输入格式和输出格式。这样不用仔细去阅读命令内容就可以一眼看到这个 bat 文件大概的目的。&lt;/p>
&lt;p>然后对输入文件夹内，后缀名为输入格式的文件进行循环。&lt;/p>
&lt;p>循环的指令，便是对每一个指定的输入文件夹内的文件，输出对应格式的文件。除后缀外的其他部分与输入文件名相同。&lt;/p>
&lt;p>同样的，复制内容，修改后缀名的变量，就可以分别为各种需求保存不同的 bat 文件了。你也可以修改 bat 文件名为对应的需求，比如&lt;code>pdf2png.bat&lt;/code>和&lt;code>pdf2png_hq.bat&lt;/code>就对应了压缩和不压缩图片尺寸的两种情况。当然这种做法有点蠢且粗暴，但我觉得还挺直观。&lt;/p></description></item><item><title>关于使用 ImageMagick 处理 apng png gif</title><link>https://deepseaxx.com/p/20240207-imagemagick/</link><pubDate>Wed, 07 Feb 2024 11:53:00 +0900</pubDate><guid>https://deepseaxx.com/p/20240207-imagemagick/</guid><description>&lt;p>从某网站上偷来的表情包默认是 apng 格式，想在 QQ 里用的话默认支持非常差，一方面 iPhone 发送 apng 图片会直接变成静态，另一方面即使是支持 apng 的设备，这些图片循环次数并不是无限。所以怎么都需要修改。&lt;/p>
&lt;p>很多不知名小公司做的软件，付费或广告，且功能不全，总感觉没法按照自己的想法处理。直接用 ImageMagick 这个开源工具来处理，而且涉及到各种参数微调的时候，个人感觉输入文本命令比 GUI 来得直观可控得多。&lt;/p>
&lt;p>本文发布在 qiita/hatenablog。现修改后转载在自己的 blog（并方便存档）。&lt;/p>
&lt;h2 id="静态-png-图片">静态 PNG 图片
&lt;/h2>&lt;p>去除 png 图片的透明背景（转换为白色）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">magick mogrify -format png -alpha remove *.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注：mogrify 为覆盖（但后缀名不同仍然无法覆盖），convert 为输出新文件&lt;/p>
&lt;h2 id="动态-png-图片转换为-gif">动态 PNG 图片转换为 GIF
&lt;/h2>&lt;p>一键指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> magick.exe convert -format gif -set dispose Previous -layers coalesce -loop 0 apng:origin.png test.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>拆解：&lt;/p>
&lt;ul>
&lt;li>-formart gif：转换为 gif 格式&lt;/li>
&lt;li>-set dispose Previous 重置 dispose 选项，并设置为“Previoius”模式，详细看这里&lt;a class="link" href="https://legacy.imagemagick.org/script/command-line-options.php?#dispose" target="_blank" rel="noopener"
>ImageMagick （legacy） – 命令行选项&lt;/a>&lt;/li>
&lt;li>-layers coalesce 让 gif 变成类似胶片的模式，虽然没看懂但是……加了这个之后突然就好了，说明在这里 &lt;a class="link" href="https://legacy.imagemagick.org/script/command-line-options.php?#layers" target="_blank" rel="noopener"
>ImageMagick （legacy） – 命令行选项&lt;/a>&lt;/li>
&lt;li>-loop 0 ：修改循环次数为无限&lt;/li>
&lt;li>apng: ：动态 png 强制以 apng 格式读取，否则将认作静态 png 处理&lt;/li>
&lt;/ul>
&lt;h2 id="批量处理">批量处理
&lt;/h2>&lt;p>本来想用 shell，后来发现想要做的循环和判断几乎可以在一行里解决。
由于忘了当时我用的是 powershell 还是 wsl，后面再补充保存为批处理文件的方法。
那么先上一行流。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> ls ./apng |awk -F &amp;#34;.png&amp;#34; &amp;#39;{print $1}&amp;#39; |xargs -I {} magick.exe convert -format gif -set dispose Previous -layers coalesce -loop 0 apng:./apng/{}.png ./gif/{}.gif
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>拆解&lt;/p>
&lt;ul>
&lt;li>ls ./apng 打印目录下文件&lt;/li>
&lt;li>awk -F &amp;ldquo;.png&amp;rdquo; &amp;lsquo;{print $1}&amp;rsquo;：以.png 为分隔符切割前一步输出，并打印第一个区块（这里顺便起到了 grep 的作用，但是总感觉可以用 ls 解决……）&lt;/li>
&lt;li>xargs -I {}：将前文输出内容多次使用 例如后面 ./apng/{}.png ./gif/{}.gif，就使用了文件名两次，来分别制定原文件名和输出文件名。&lt;/li>
&lt;/ul>
&lt;h3 id="想要保存下来一键执行">想要保存下来一键执行
&lt;/h3>&lt;p>微软辛辛苦苦开发了 powershell，那当然是想用 powershell 对应的 ps1 来执行了。但是 ps1 默认需要右键执行，分享给小白难免会有“这怎么用”的问题。&lt;/p>
&lt;p>于是在不考虑执行效率和优雅程度，同时为了利用 powershell 一些方便的指令，单纯为了强行把他变成大家都熟悉的.bat 格式，可以这么写指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">powershell -command &amp;#34;$a = Get-Clipboard;$a=&amp;#39;&amp;#34;&amp;#39;+$a.replace(&amp;#39;/&amp;#39;,&amp;#39;\&amp;#39;)+&amp;#39;&amp;#34;&amp;#39;; explorer($a)&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>引号内部替换为想执行的 powershell 指令即可。&lt;/p>
&lt;p>这里的示例是在资源管理器中打开粘贴板中的文件目录。&lt;/p>
&lt;p>因为某些奇怪的原因现在用得非常多。&lt;/p>
&lt;h2 id="参考">参考
&lt;/h2>&lt;p>&lt;a class="link" href="https://imagemagick.org/script/mogrify.php" target="_blank" rel="noopener"
>ImageMagick – Command-line Tools: Mogrify&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.bilibili.com/read/cv362796" target="_blank" rel="noopener"
>提取与优化 Line 贴图的正确姿势 - 哔哩哔哩&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/ImageMagick/ImageMagick/discussions/3846" target="_blank" rel="noopener"
>Can I use ImageMagick to convert Animated PNG (APNG) into animated WEBP format? · Discussion #3846 · ImageMagick/ImageMagick&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://imagemagick.org/script/formats.php" target="_blank" rel="noopener"
>ImageMagick – Image Formats&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/qkshhan/p/16202931.html" target="_blank" rel="noopener"
>为什么有的 GIF 图片只会播放一遍，而有的会重复播放？关于 gif 你想知道的一切！ - 轻狂书生 han - 博客园&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://legacy.imagemagick.org/Usage/anim_basics/#previous" target="_blank" rel="noopener"
>Animation Basics &amp;ndash; IM v6 Examples&lt;/a>&lt;/p></description></item><item><title>自己总结的好用小工具</title><link>https://deepseaxx.com/p/20240207-useful-tools/</link><pubDate>Wed, 07 Feb 2024 11:53:00 +0900</pubDate><guid>https://deepseaxx.com/p/20240207-useful-tools/</guid><description>&lt;h2 id="一覧">一覧
&lt;/h2>&lt;ul>
&lt;li>PowerToys
&lt;ul>
&lt;li>Fancyzone&lt;/li>
&lt;li>PowerToys Run&lt;/li>
&lt;li>Preview&lt;/li>
&lt;li>Mouse Utility&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VSCode&lt;/li>
&lt;li>CubePDF
&lt;ul>
&lt;li>Utilities&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Snipaste
&lt;ul>
&lt;li>商用可能なのは Snipaste 1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>autohotkey&lt;/li>
&lt;li>Quickswitch
&lt;ul>
&lt;li>Library の機能を持ち出し&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Everything
&lt;ul>
&lt;li>1.5a の alpha 版&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>magick&lt;/li>
&lt;li>CopyQ&lt;/li>
&lt;/ul>
&lt;h2 id="簡単紹介">簡単紹介
&lt;/h2>&lt;p>&lt;a class="link" href="https://github.com/microsoft/PowerToys" target="_blank" rel="noopener"
>PowerToys&lt;/a>（MS 社が開発したツール集）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Fancyzone：自分が設定したレイアウトで画面の配置が可能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PowerToys Run：Alt+space で入力バーを起動し
○ 電卓、単位変換、日付時間コピー
○ ファイル・フォルダー・ソフトの起動
○ PC のシャットダウン・スリープ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Preview：ファイル開かずに、覗き見ができる&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mouse Utility：マウス位置の特定、クリック蛍光ペン&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Text Extractor：画像にあるテキストをコピー&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Awake：ずっと電源オン状態で保持可能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Power Rename：ファイル名を正規表現で一括変更&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Text Extrator：画面文字 OCR&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Borderless Mouse：複数のパソコンを一つのマウスでコントロール&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://code.visualstudio.com/" target="_blank" rel="noopener"
>VSCode&lt;/a>：多分いう必要のない、すべてのコーディングと文字ファイル処理に向いている&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.cube-soft.jp/cubepdf/" target="_blank" rel="noopener"
>CubePDF&lt;/a>：無料ソフト、PDF の編集、画像から PDF の変換&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.snipaste.com/download.html" target="_blank" rel="noopener"
>Snipaste&lt;/a>：スクリーンショットと編集&lt;/p>
&lt;/li>
&lt;li>
&lt;pre>&lt;code>無料で商用可能なのはバージョン1
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.autohotkey.com/" target="_blank" rel="noopener"
>autohotkey&lt;/a>：いくつかの動作をスクリプトとして作成、ショートキーより呼び出し可能、プログラミング能力必要&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/gepruts/QuickSwitch/tree/main" target="_blank" rel="noopener"
>Quickswitch&lt;/a>：Library の機能で、ポップアップ画面で素早くフォルダー間移動&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.voidtools.com/forum/viewtopic.php?t=9787" target="_blank" rel="noopener"
>Everything&lt;/a>：一瞬でファイル特定ができる&lt;/p>
&lt;/li>
&lt;li>
&lt;ul>
&lt;li>1.5a の alpha 版があり、新しい機能が追加されている&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://imagemagick.org/script/download.php" target="_blank" rel="noopener"
>magick&lt;/a>：コマンドラインで画像の変換ができる&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://github.com/hluk/CopyQ" target="_blank" rel="noopener"
>CopyQ&lt;/a>：コピーした内容の履歴が残る、アイテムを固定してダブルクリック入力ができる&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>